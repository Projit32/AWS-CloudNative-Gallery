AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Template for all VPC endpoints

Parameters:
  VpcId:
    Type: String
    Description: Id of VPC

  Subnets:
    Type: String
    Description: List of Subnets

  VPCEndpointSecurityGroup:
    Type: String
    Description: VPC Endpoint Security Group

  RouteTableId:
    Type: String
    Description: ID of route Table



Resources:

  CloudWatchLogsVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.logs'
      VpcEndpointType: Interface
      SubnetIds: !Split [ ",", !Ref Subnets]
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroup
      PrivateDnsEnabled: true

  DynamoDBEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.dynamodb
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref RouteTableId
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 'dynamodb:*'
            Resource: '*'

#  ECSEndpoint:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VpcId
#      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecs
#      VpcEndpointType: Interface
#      PrivateDnsEnabled: true
#      SecurityGroupIds:
#        - !Ref VPCEndpointSecurityGroup
#      SubnetIds: !Split [ ",", !Ref Subnets]

  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref RouteTableId
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:*'
            Resource: '*'

#  LambdaEndpoint:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VpcId
#      ServiceName: !Sub com.amazonaws.${AWS::Region}.lambda
#      VpcEndpointType: Interface
#      PrivateDnsEnabled: true
#      SecurityGroupIds:
#        - !Ref VPCEndpointSecurityGroup
#      SubnetIds: !Split [ ",", !Ref Subnets]
#
#  SQSEndpoint:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VpcId
#      ServiceName: !Sub com.amazonaws.${AWS::Region}.sqs
#      VpcEndpointType: Interface
#      PrivateDnsEnabled: true
#      SecurityGroupIds:
#        - !Ref VPCEndpointSecurityGroup
#      SubnetIds: !Split [ ",", !Ref Subnets]

#  EC2Endpoint:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VpcId
#      ServiceName: !Sub com.amazonaws.${AWS::Region}.ec2
#      VpcEndpointType: Interface
#      PrivateDnsEnabled: true
#      SecurityGroupIds:
#        - !Ref VPCEndpointSecurityGroup
#      SubnetIds: !Split [ ",", !Ref Subnets]
#
#  EventBridgeEndpoint:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VpcId
#      ServiceName: !Sub com.amazonaws.${AWS::Region}.events
#      VpcEndpointType: Interface
#      PrivateDnsEnabled: true
#      SecurityGroupIds:
#        - !Ref VPCEndpointSecurityGroup
#      SubnetIds: !Split [ ",", !Ref Subnets]
#
#  KinesisEndpoint:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VpcId
#      ServiceName: !Sub com.amazonaws.${AWS::Region}.kinesis-streams
#      VpcEndpointType: Interface
#      PrivateDnsEnabled: true
#      SecurityGroupIds:
#        - !Ref VPCEndpointSecurityGroup
#      SubnetIds: !Split [ ",", !Ref Subnets]
#
#  ECRAPIEndpoint:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VpcId
#      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.api
#      VpcEndpointType: Interface
#      PrivateDnsEnabled: true
#      SecurityGroupIds:
#        - !Ref VPCEndpointSecurityGroup
#      SubnetIds: !Split [ ",", !Ref Subnets]
#
#  ECRDKREndpoint:
#    Type: AWS::EC2::VPCEndpoint
#    Properties:
#      VpcId: !Ref VpcId
#      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.dkr
#      VpcEndpointType: Interface
#      PrivateDnsEnabled: true
#      SecurityGroupIds:
#        - !Ref VPCEndpointSecurityGroup
#      SubnetIds: !Split [ ",", !Ref Subnets ]