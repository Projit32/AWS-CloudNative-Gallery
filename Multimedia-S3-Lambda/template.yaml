AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: S3 Bucket for application

Parameters:
  BucketName:
    Type: String
    Description: Name of the bucket
  NotificationLambda:
    Type: String
    Description: Name of the lambda to be triggered on object creation

Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub ${BucketName}-${AWS::Region}-${AWS::AccountId}
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
            AllowedOrigins:
              - '*'
            ExposedHeaders:
              - Date
            Id: CORSRuleForUpload
      LifecycleConfiguration:
        Rules:
          - Id: TrashFolderLifecycleRule
            Status: Enabled
            Prefix: trash/
            ExpirationInDays: 30
            NoncurrentVersionExpiration:
              NoncurrentDays: 1
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
          - Id: TrashFolderDeleteMarkerRule
            Status: Enabled
            Prefix: trash/
            ExpiredObjectDeleteMarker: true
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:Put'
            Function: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${NotificationLambda}
          - Event: 's3:ObjectCreated:Post'
            Function: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${NotificationLambda}
          - Event: 's3:ObjectCreated:CompleteMultipartUpload'
            Function: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${NotificationLambda}

Outputs:
  S3BucketName:
    Description: Name of the s3 bucket
    Value: !Ref S3Bucket
